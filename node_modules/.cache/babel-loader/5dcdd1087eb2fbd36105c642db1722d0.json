{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\FRONT_END\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\FRONT_END\\\\src\\\\components\\\\Auth\\\\SalonRegisterComponent.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config\";\n\nvar SalonRegisterComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SalonRegisterComponent, _Component);\n\n  function SalonRegisterComponent() {\n    var _this;\n\n    _classCallCheck(this, SalonRegisterComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SalonRegisterComponent).call(this));\n\n    _this.handleChange = function (name, e) {\n      _this.setState(_defineProperty({}, name, e.target.value));\n    };\n\n    _this.addSalon = function () {\n      // if (this.state.bookingDate === \"\") {\n      //   return;\n      // }\n      var _this$state = _this.state,\n          salonName = _this$state.salonName,\n          salonReg = _this$state.salonReg,\n          salonLocation = _this$state.salonLocation,\n          salonNumber = _this$state.salonNumber,\n          userName = _this$state.userName,\n          userPassword = _this$state.userPassword;\n\n      _this.setState({\n        salon: [].concat(_toConsumableArray(_this.state.salon), [{\n          name: salonName,\n          location: salonReg,\n          service: salonLocation,\n          session: salonNumber\n        }]),\n        user: [].concat(_toConsumableArray(_this.state.user), [{\n          name: userName,\n          password: userPassword\n        }])\n      });\n    };\n\n    _this.register =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, salon, res, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, user, _res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                isRegitering: true\n              });\n\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 4;\n              _iterator = _this.state.salons[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 16;\n                break;\n              }\n\n              salon = _step.value;\n              _context.next = 10;\n              return axios.post(\"\".concat(BASE_URL, \"/salon/add\"), _objectSpread({}, salon));\n\n            case 10:\n              res = _context.sent;\n              console.log(\"salon data\");\n              console.log(res.data);\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context.next = 6;\n              break;\n\n            case 16:\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](4);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 22:\n              _context.prev = 22;\n              _context.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 25:\n              _context.prev = 25;\n\n              if (!_didIteratorError) {\n                _context.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context.finish(25);\n\n            case 29:\n              return _context.finish(22);\n\n            case 30:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context.prev = 33;\n              _iterator2 = _this.state.user[Symbol.iterator]();\n\n            case 35:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context.next = 45;\n                break;\n              }\n\n              user = _step2.value;\n              _context.next = 39;\n              return axios.post(\"\".concat(BASE_URL, \"/adduser\"), _objectSpread({}, user));\n\n            case 39:\n              _res = _context.sent;\n              console.log(\"user data\");\n              console.log(_res.data);\n\n            case 42:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 35;\n              break;\n\n            case 45:\n              _context.next = 51;\n              break;\n\n            case 47:\n              _context.prev = 47;\n              _context.t1 = _context[\"catch\"](33);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 51:\n              _context.prev = 51;\n              _context.prev = 52;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 54:\n              _context.prev = 54;\n\n              if (!_didIteratorError2) {\n                _context.next = 57;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 57:\n              return _context.finish(54);\n\n            case 58:\n              return _context.finish(51);\n\n            case 59:\n              _this.setState({\n                isRegitering: false\n              });\n\n              alert(\"Salon added\");\n\n            case 61:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[4, 18, 22, 30], [23,, 25, 29], [33, 47, 51, 59], [52,, 54, 58]]);\n    }));\n    _this.state = {\n      // user: {},\n      salon: [],\n      salonName: \"\",\n      salonReg: \"\",\n      salonLocation: \"\",\n      salonNumber: \"\",\n      user: [],\n      userName: \"\",\n      userPassword: \"\",\n      isRegitering: false\n    };\n    return _this;\n  }\n\n  _createClass(SalonRegisterComponent, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// // const userId = this.props.match.params.id;\n      // axios.get(`${BASE_URL}/stylist/${userId}`).then(res => {\n      //   if (res.data.length) {\n      //     this.setState({ user: res.data[0] });\n      //   }\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"columns is-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content has-text-centered \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"title is-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Register as a Salon\"), React.createElement(\"div\", {\n        className: \"columns is-multiline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Name\",\n        onChange: function onChange(e) {\n          _this2.handleChange(\"salonName\", e);\n        },\n        value: this.state.salonName,\n        className: \"input\",\n        type: \"text\" // name=\"\"\n        // id=\"\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"Username\" // placeholder=\"Name\"\n        ,\n        onChange: function onChange(e) {\n          _this2.handleChange(\"userName\", e);\n        },\n        value: this.state.userName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        placeholder: \"Password\",\n        onChange: function onChange(e) {\n          _this2.handleChange(\"password\", e);\n        },\n        value: this.state.userPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        // type= \"text\" pattern=\"[0-9]*\"\n        // className=\"input\"\n        placeholder: \"Registration Number\",\n        onChange: function onChange(e) {\n          _this2.handleChange(\"salonReg\", e);\n        },\n        value: this.state.salonReg,\n        className: \"input\",\n        type: \"text\" // name=\"salonReg\"\n        // id=\"salonReg\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Location\",\n        onChange: function onChange(e) {\n          _this2.handleChange(\"salonLocation\", e);\n        },\n        value: this.state.salonLocation,\n        className: \"input\",\n        type: \"text\" // name=\"salonLoc\"\n        // id=\"salonLoc\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        // type=\"text\"\n        // className=\"input\"\n        placeholder: \"Number\",\n        onChange: function onChange(e) {\n          _this2.handleChange(\"salonNumber\", e);\n        },\n        value: this.state.salonNumber,\n        className: \"input\",\n        type: \"text\",\n        pattern: \"[0-9]*\" // name=\"salonNum\"\n        // id=\"salonNum\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.register,\n        className: \"button is-dark is-pulled-right \".concat(this.state.isRegitering ? \"is-loading\" : \"\", \" \"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Register\"))))))));\n    }\n  }]);\n\n  return SalonRegisterComponent;\n}(Component);\n\nexport default SalonRegisterComponent;","map":{"version":3,"sources":["D:\\FRONT_END\\src\\components\\Auth\\SalonRegisterComponent.jsx"],"names":["React","Component","axios","BASE_URL","SalonRegisterComponent","handleChange","name","e","setState","target","value","addSalon","state","salonName","salonReg","salonLocation","salonNumber","userName","userPassword","salon","location","service","session","user","password","register","isRegitering","salons","post","res","console","log","data","alert"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,cAAzB;;IAEMC,sB;;;;;AACJ,oCAAc;AAAA;;AAAA;;AACZ;;AADY,UA0BdC,YA1Bc,GA0BC,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC1B,YAAKC,QAAL,qBAAiBF,IAAjB,EAAwBC,CAAC,CAACE,MAAF,CAASC,KAAjC;AACD,KA5Ba;;AAAA,UA8BdC,QA9Bc,GA8BH,YAAM;AACf;AACA;AACA;AAHe,wBAYX,MAAKC,KAZM;AAAA,UAMbC,SANa,eAMbA,SANa;AAAA,UAObC,QAPa,eAObA,QAPa;AAAA,UAQbC,aARa,eAQbA,aARa;AAAA,UASbC,WATa,eASbA,WATa;AAAA,UAUbC,QAVa,eAUbA,QAVa;AAAA,UAWbC,YAXa,eAWbA,YAXa;;AAcf,YAAKV,QAAL,CAAc;AACZW,QAAAA,KAAK,+BACA,MAAKP,KAAL,CAAWO,KADX,IAEH;AACEb,UAAAA,IAAI,EAAEO,SADR;AAEEO,UAAAA,QAAQ,EAAEN,QAFZ;AAGEO,UAAAA,OAAO,EAAEN,aAHX;AAIEO,UAAAA,OAAO,EAAEN;AAJX,SAFG,EADO;AAUZO,QAAAA,IAAI,+BACC,MAAKX,KAAL,CAAWW,IADZ,IAEF;AACEjB,UAAAA,IAAI,EAAEW,QADR;AAEEO,UAAAA,QAAQ,EAAEN;AAFZ,SAFE;AAVQ,OAAd;AAkBD,KA9Da;;AAAA,UAgEdO,QAhEc;AAAA;AAAA;AAAA;AAAA,6BAgEH;AAAA;;AAAA;AAAA;AAAA;AAAA;AACT,oBAAKjB,QAAL,CAAc;AAAEkB,gBAAAA,YAAY,EAAE;AAAhB,eAAd;;AADS;AAAA;AAAA;AAAA;AAAA,0BAGS,MAAKd,KAAL,CAAWe,MAHpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGAR,cAAAA,KAHA;AAAA;AAAA,qBAISjB,KAAK,CAAC0B,IAAN,WAAczB,QAAd,mCACXgB,KADW,EAJT;;AAAA;AAIHU,cAAAA,GAJG;AAOPC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AARO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAWQ,MAAKpB,KAAL,CAAWW,IAXnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAA,cAAAA,IAXA;AAAA;AAAA,qBAYSrB,KAAK,CAAC0B,IAAN,WAAczB,QAAd,iCACXoB,IADW,EAZT;;AAAA;AAYHM,cAAAA,IAZG;AAePC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAG,CAACG,IAAhB;;AAhBO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAmBT,oBAAKxB,QAAL,CAAc;AAAEkB,gBAAAA,YAAY,EAAE;AAAhB,eAAd;;AACAO,cAAAA,KAAK,CAAC,aAAD,CAAL;;AApBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhEG;AAGZ,UAAKrB,KAAL,GAAa;AACX;AACAO,MAAAA,KAAK,EAAE,EAFI;AAGXN,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,aAAa,EAAE,EALJ;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXO,MAAAA,IAAI,EAAE,EAPK;AAQXN,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,YAAY,EAAE,EATH;AAUXQ,MAAAA,YAAY,EAAE;AAVH,KAAb;AAHY;AAeb;;;;yCAEoB,CACnB;AACA;AACA;AACA;AACA;AACA;AACD;;;6BA8DQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,MADd;AAEE,QAAA,QAAQ,EAAE,kBAAAnB,CAAC,EAAI;AACb,UAAA,MAAI,CAACF,YAAL,CAAkB,WAAlB,EAA+BE,CAA/B;AACD,SAJH;AAKE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,SALpB;AAME,QAAA,SAAS,EAAC,OANZ;AAOE,QAAA,IAAI,EAAC,MAPP,CAQE;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF,EAkBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,WAAW,EAAC,UAHd,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAE,kBAAAN,CAAC,EAAI;AACb,UAAA,MAAI,CAACF,YAAL,CAAkB,UAAlB,EAA8BE,CAA9B;AACD,SAPH;AAQE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,QARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAlBF,EAkCE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,QAAQ,EAAE,kBAAAV,CAAC,EAAI;AACb,UAAA,MAAI,CAACF,YAAL,CAAkB,UAAlB,EAA8BE,CAA9B;AACD,SANH;AAOE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWM,YAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAlCF,EAiDE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE;AACA;AACA,QAAA,WAAW,EAAC,qBAHd;AAIE,QAAA,QAAQ,EAAE,kBAAAX,CAAC,EAAI;AACb,UAAA,MAAI,CAACF,YAAL,CAAkB,UAAlB,EAA8BE,CAA9B;AACD,SANH;AAOE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWE,QAPpB;AAQE,QAAA,SAAS,EAAC,OARZ;AASE,QAAA,IAAI,EAAC,MATP,CAUE;AACA;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAjDF,EAoEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,QAAQ,EAAE,kBAAAP,CAAC,EAAI;AACb,UAAA,MAAI,CAACF,YAAL,CAAkB,eAAlB,EAAmCE,CAAnC;AACD,SAJH;AAKE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWG,aALpB;AAME,QAAA,SAAS,EAAC,OANZ;AAOE,QAAA,IAAI,EAAC,MAPP,CAQE;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CApEF,EAsFE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE;AACA;AACA,QAAA,WAAW,EAAC,QAHd;AAIE,QAAA,QAAQ,EAAE,kBAAAR,CAAC,EAAI;AACb,UAAA,MAAI,CAACF,YAAL,CAAkB,aAAlB,EAAiCE,CAAjC;AACD,SANH;AAOE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWI,WAPpB;AAQE,QAAA,SAAS,EAAC,OARZ;AASE,QAAA,IAAI,EAAC,MATP;AAUE,QAAA,OAAO,EAAC,QAVV,CAWE;AACA;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAtFF,EA2GE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,KAAKS,QADhB;AAEE,QAAA,SAAS,2CACP,KAAKb,KAAL,CAAWc,YAAX,GAA0B,YAA1B,GAAyC,EADlC,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CA3GF,CAFF,CADF,CADF,CADF,CADF,CADF;AAmID;;;;EA3NkCzB,S;;AA8NrC,eAAeG,sBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { BASE_URL } from \"../../config\";\r\n\r\nclass SalonRegisterComponent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      // user: {},\r\n      salon: [],\r\n      salonName: \"\",\r\n      salonReg: \"\",\r\n      salonLocation: \"\",\r\n      salonNumber: \"\",\r\n      user: [],\r\n      userName: \"\",\r\n      userPassword: \"\",\r\n      isRegitering: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // // const userId = this.props.match.params.id;\r\n    // axios.get(`${BASE_URL}/stylist/${userId}`).then(res => {\r\n    //   if (res.data.length) {\r\n    //     this.setState({ user: res.data[0] });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  handleChange = (name, e) => {\r\n    this.setState({ [name]: e.target.value });\r\n  };\r\n\r\n  addSalon = () => {\r\n    // if (this.state.bookingDate === \"\") {\r\n    //   return;\r\n    // }\r\n\r\n    const {\r\n      salonName,\r\n      salonReg,\r\n      salonLocation,\r\n      salonNumber,\r\n      userName,\r\n      userPassword\r\n    } = this.state;\r\n\r\n    this.setState({\r\n      salon: [\r\n        ...this.state.salon,\r\n        {\r\n          name: salonName,\r\n          location: salonReg,\r\n          service: salonLocation,\r\n          session: salonNumber\r\n        }\r\n      ],\r\n      user: [\r\n        ...this.state.user,\r\n        {\r\n          name: userName,\r\n          password: userPassword\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  register = async () => {\r\n    this.setState({ isRegitering: true });\r\n\r\n    for (let salon of this.state.salons) {\r\n      let res = await axios.post(`${BASE_URL}/salon/add`, {\r\n        ...salon\r\n      });\r\n      console.log(\"salon data\");\r\n      console.log(res.data);\r\n    }\r\n\r\n    for (let user of this.state.user) {\r\n      let res = await axios.post(`${BASE_URL}/adduser`, {\r\n        ...user\r\n      });\r\n      console.log(\"user data\");\r\n      console.log(res.data);\r\n    }\r\n\r\n    this.setState({ isRegitering: false });\r\n    alert(\"Salon added\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-5\">\r\n          <form action=\"\">\r\n            <div className=\"card\">\r\n              <div className=\"card-content has-text-centered \">\r\n                <h3 className=\"title is-3\">Register as a Salon</h3>\r\n                <div className=\"columns is-multiline\">\r\n                  <div className=\"column is-full\">\r\n                    <div className=\"control\">\r\n                      <div className=\"field\">\r\n                        <input\r\n                          placeholder=\"Name\"\r\n                          onChange={e => {\r\n                            this.handleChange(\"salonName\", e);\r\n                          }}\r\n                          value={this.state.salonName}\r\n                          className=\"input\"\r\n                          type=\"text\"\r\n                          // name=\"\"\r\n                          // id=\"\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"column is-full\">\r\n                    <div className=\"control\">\r\n                      <div className=\"field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"input\"\r\n                          placeholder=\"Username\"\r\n                          // placeholder=\"Name\"\r\n                          onChange={e => {\r\n                            this.handleChange(\"userName\", e);\r\n                          }}\r\n                          value={this.state.userName}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"column is-full\">\r\n                    <div className=\"control\">\r\n                      <div className=\"field\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input\"\r\n                          placeholder=\"Password\"\r\n                          onChange={e => {\r\n                            this.handleChange(\"password\", e);\r\n                          }}\r\n                          value={this.state.userPassword}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"column is-full\">\r\n                    <div className=\"control\">\r\n                      <div className=\"field\">\r\n                        <input\r\n                          // type= \"text\" pattern=\"[0-9]*\"\r\n                          // className=\"input\"\r\n                          placeholder=\"Registration Number\"\r\n                          onChange={e => {\r\n                            this.handleChange(\"salonReg\", e);\r\n                          }}\r\n                          value={this.state.salonReg}\r\n                          className=\"input\"\r\n                          type=\"text\"\r\n                          // name=\"salonReg\"\r\n                          // id=\"salonReg\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"column is-full\">\r\n                    <div className=\"control\">\r\n                      <div className=\"field\">\r\n                        <input\r\n                          placeholder=\"Location\"\r\n                          onChange={e => {\r\n                            this.handleChange(\"salonLocation\", e);\r\n                          }}\r\n                          value={this.state.salonLocation}\r\n                          className=\"input\"\r\n                          type=\"text\"\r\n                          // name=\"salonLoc\"\r\n                          // id=\"salonLoc\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"column is-full\">\r\n                    <div className=\"control\">\r\n                      <div className=\"field\">\r\n                        <input\r\n                          // type=\"text\"\r\n                          // className=\"input\"\r\n                          placeholder=\"Number\"\r\n                          onChange={e => {\r\n                            this.handleChange(\"salonNumber\", e);\r\n                          }}\r\n                          value={this.state.salonNumber}\r\n                          className=\"input\"\r\n                          type=\"text\"\r\n                          pattern=\"[0-9]*\"\r\n                          // name=\"salonNum\"\r\n                          // id=\"salonNum\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"column is-full\">\r\n                    <button\r\n                      onClick={this.register}\r\n                      className={`button is-dark is-pulled-right ${\r\n                        this.state.isRegitering ? \"is-loading\" : \"\"\r\n                      } `}\r\n                    >\r\n                      Register\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SalonRegisterComponent;\r\n"]},"metadata":{},"sourceType":"module"}